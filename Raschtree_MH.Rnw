
\todo[inline]{Comment on new example: I now use data from Bogen 20 of the SPISA dataset. I use the student subset, and complete cases on all variables. The story is less clear, but the tree is still stopped early, and we can display which items have dif. }

\begin{itemize}
\item Example Rasch tree: Data from SPISA (data from Trepte \& Verbeet; Bogen 20 (as in psychotree, but from the whole dataset, not only a subsample))
\item take the subsample of students (only students); complete cases; $N = 9769$
\item items could probably appear in Appendix??
\begin{enumerate}
\item Which painter created this painting? – Andy Warhol.
\item What do these four buildings have in common? – All four were designed by the same architects.
\item Roman numbers: What is the meaning of CLVI? – 156.
\item What was the German movie with the most viewers since 1990? – Der Schuh des Manitu.
\item In which TV series was the US president portrayed by an African American actor for a long time? – 24.
\item What is the name of the bestselling novel by Daniel Kehlmann? – Die Vermessung der Welt (Measuring The World).
\item Which city is the setting for the novel ‘Buddenbrooks’? – Lübeck.
\item In which city is this building located? – Paris.
\item Which one of the following operas is not by Mozart? – Aida.
\end{enumerate}
\end{itemize}

We load the data and inspect the first rows. there are several covariates: age (continuous), gender (male, female, missing), area (Language \& Culture, Law \& Economics, Medicine \& Health, Engineering, Sciences, Pharmacy, Geography, Agriculture \& Nutrition, Sports) and 9 items from the culture scale (true/false 0/1). 

@Caro: I excluded the covariates student and occupation, because I took the student subsample; 

<<echo = FALSE>>=
load("SPISA_example/dat_SPISA.rda")
covar_data$Student <- NULL
covar_data$Occupation <- NULL
covar_data$Area <- sub("\n", "", covar_data$Area)
@


<<>>=
head(covar_data)
head(culture_scale)
@

We create a dataset \texttt{dat\_SPISA} that contains the data of the covariate and the item responses from the culture scale. By assigning the whole scale to the dataset using \texttt{\$}, we can later access item responses from all items using \texttt{\$culture}. 
<<>>=
dat_SPISA <- covar_data
dat_SPISA$culture <- culture_scale
@

The Rasch tree can be fitted with the function \texttt{raschtree} from the R package \texttt{psychotree}. We use the typical formula syntax with the item responses of the culture scale on the left hand side of $\sim$, and the covariates on the right hand side. 

<<echo = FALSE>>=
if(!file.exists("SPISA_example/Raschtree.rda")){
  library(psychotree)
  Raschtree_culture <- raschtree(culture ~  Gender + Age + Area, 
                                 data = dat_SPISA)
  save(Raschtree_culture, file = "SPISA_example/Raschtree.rda")
}
load("SPISA_example/Raschtree.rda")
@


<<eval = FALSE>>=
library(psychotree)
Raschtree_culture <- raschtree(culture ~  Gender + Age + Area,
                               data = dat_SPISA)
@

We can plot the Raschtree using the plot function. But it is very big, lots of splits, we don't know whether the splits are due to substantial differences in item difficulty parameters, because the item difficulty profiles in the end nodes are hard to interpret/compare. 

<<fig = TRUE, width = 15, height = 8>>=
plot(Raschtree_culture)
@

\todo[inline]{The are covariate split does not look pretty yet. But I will try to make it more pretty later on.. }

Mantel-Haenszel trees use the Mantel-Haenszel effect size measure for DIF. it has three categories (A: negligible, B: moderate, C: large). If none of the items has DIF in category B or C (default, but can also be changed so that DIF has to be C), the tree is stopped from growing. 

The software must be installed from github, but will (probably) be implemented in the psychotree package some time in the future

<<>>=
devtools::install_github("mirka-henninger/raschtreeMH")
library(raschtreeMH)
@

Syntax is very similar to the classical Rasch tree, but an additional argument \texttt{stopfun}, where the mantelhaneszel stopping function can be selected (but also own stopping functions can be provided; see Henninger et al., 2023). The user also has to indicate what kind of purification strategy should be used (none, 2step, iterative). Iterative is recommended. Optionally, the user can specify the stopping criterion. In this case, tree growing is stopped when all items fall into category ``A''. 

<<echo = FALSE>>=
if(!file.exists("SPISA_example/Raschtree_MH_culture.rda")){
  Raschtree_MH_culture <- raschtree(culture ~  Gender + Age + Area, 
                                    data = dat_SPISA, 
                                    stopfun= stopfun_mantelhaenszel(purification = "iterative",
                                                                    stopcrit = "A"))
  save(Raschtree_MH_culture, file = "SPISA_example/Raschtree_MH_culture.rda")
}
load("SPISA_example/Raschtree_MH_culture.rda")
@

<<eval = FALSE>>=
Raschtree_MH_culture <- raschtree(culture ~  Gender + Age + Area, 
                                  data = dat_SPISA, 
                                  stopfun= stopfun_mantelhaenszel(
                                    purification = "iterative",
                                    stopcrit = "A"))
@

For technical reasons, the information about the effect size and ETS classification are not saved in the tree object itself but have to be added afterwards using the \texttt{add\_mantelhaenszel} function. 

<<>>=
Raschtree_MH_culture <- add_mantelhaenszel(Raschtree_MH_culture, 
                                           purification = "iterative")
@

After we have added the information about the Mantel-Haenszel effect size to the Rasch tree, we can now visualize the Rasch tree together with the effect size measure. If we now plot the Mantel-Haenszel Rasch tree, we see that the tree is much more concise with a lower number of splits. In addition, we see the number of items classified as A, B, or C in each node. For instance, we see that one item is classified in category B in Node 1, and 4 items as C.

<<fig = TRUE, width = 9, height = 7>>=
plot(Raschtree_MH_culture)
@

We can also color the items in the end node profiles according to a split in the tree. Here, we see that for Node 1 (split on the covariate Gender), items 1, 6, 7, 8, 9 show DIF in categories B or C. 

\begin{itemize}
\item 1 painting by Andy Warhol
\item 6: novel by Daniel Kehlmann: Die Vermessung der Welt
\item 7: city of the Buddenbrooks: Lübeck
\item 8: city with building: Paris
\item 9: opera not by Mozart: Aida
\end{itemize}

<<fig = TRUE, width = 9, height = 7>>=
plot(Raschtree_MH_culture, color_by_node = 1)
@

We can also color by Node 2 (split on covariate Age). Also here, Item 1 shows DIF in category B. It seems to be easier for younger respondents ($\leq 24$) compared to older respondents (painting by Andy Warhol).  

<<fig = TRUE, width = 9, height = 7>>=
plot(Raschtree_MH_culture, color_by_node = 2)
@

For Node 4 (also split on covariate Age), Items 1 and 9 show DIF, such that Item 1 and 9 are easier for younger respondents (Age $\leq 29$). (Item 1: Painting by Andy Warhol; Item 9: Opera not by Mozart: Aida)

<<fig = TRUE, width = 9, height = 7>>=
plot(Raschtree_MH_culture, color_by_node = 4)
@


\todo[inline]{Maybe a small note on anchoring? Item difficulty profiles are anchoring on the items that do not show DIF. This facilitates comparisons across end nodes (but maybe we do not want to say that??)}


The information about the Mantel-Haenszel effect size measure for each node can also be accessed from the Rasch tree object using \texttt{\$info\$mantelhaenszel}. it contains the information on classification of each item in e ach node, the computed Mantel-Haenszel effect size measure, the type of purification, and if purification was iterative how many iterations were realized. 

<<>>=
Raschtree_MH_culture$info$mantelhaenszel
@

@Caro: for instance, from the signs we can see that items are less easy (i.e. more difficult) for females compared to men; it is probably easier to see that from the sign compared to the item difficulty profiles. 