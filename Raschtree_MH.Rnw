
\begin{itemize}
\item Example Rasch tree: Data from SPISA (data from Trepte \& Verbeet)
\item take the subsample of students (only students), and a random subsample of 5000 respondents (seed 04102023)
\item items could probably appear in Appendix??
\begin{itemize}
\item Which painter created this painting? – Andy Warhol.
\item What do these four buildings have in common? – All four were designed by the same architects.
\item Roman numbers: What is the meaning of CLVI? – 156.
\item What was the German movie with the most viewers since 1990? – Der Schuh des Manitu.
\item In which TV series was the US president portrayed by an African American actor for a long time? – 24.
\item What is the name of the bestselling novel by Daniel Kehlmann? – Die Vermessung der Welt (Measuring The World).
\item Which city is the setting for the novel ‘Buddenbrooks’? – Lübeck.
\item In which city is this building located? – Paris.
\item Which one of the following operas is not by Mozart? – Aida.
\end{itemize}
\end{itemize}

\todo[inline]{at Caro: Ich habe die Daten (glaube ich) mal von dir bekommen (\texttt{spisa\_ges.RData}) und die Item-Formulierungen habe ich aktuell aus dem psychotree Paket. Stimmt das so? Ich glaube, der Originaltest hatte mehrere parallele Skalen, zumindest sind in dem PDF/BUCH von Trepte sehr viel mehr, und sehr ähnliche Items enthalten. Das könnten wir vielleicht nochmal nachgucken.}

We load the data and inspect the first rows. there are several covariates: age (continuous), gender (male, female, missing), area (Language \& Culture, Law \& Economics, Medicine \& Health, Engineering, Sciences, Pharmacy, Geography, Agriculture \& Nutrition, Sports) and 9 items from the culture scale (true/false 0/1). 

@Caro: I excluded the covariates student and occupation, because I took the student subsample; 

<<echo = FALSE>>=
load("SPISA_example/dat_SPISA.rda")
covar_data$Student <- NULL
covar_data$Occupation <- NULL
@


<<>>=
head(covar_data)
head(culture_scale)
@

We create a dataset \texttt{dat\_SPISA} that contains the data of the covariate and the item responses from the culture scale. By assigning the whole scale to the dataset using \texttt{\$}, we can later access item responses from all items using \texttt{\$culture}. 
<<>>=
dat_SPISA <- covar_data
dat_SPISA$culture <- culture_scale
@

The Rasch tree can be fitted with the function \texttt{raschtree} from the R package \texttt{psychotree}. We use the typical formula syntax with the item responses of the culture scale on the left hand side of $\sim$, and the covariates on the right hand side. 

<<echo = FALSE>>=
if(!file.exists("SPISA_example/Raschtree.rda")){
  library(psychotree)
  Raschtree_culture <- raschtree(culture ~  Gender + Age + Area, 
                                 data = dat_SPISA)
  save(Raschtree_culture, file = "SPISA_example/Raschtree.rda")
}
load("SPISA_example/Raschtree.rda")
@


<<eval = FALSE>>=
library(psychotree)
Raschtree_culture <- raschtree(culture ~  Gender + Age + Area,
                               data = dat_SPISA)
@

We can plot the Raschtree using the plot function. But it is very big, lots of splits, we don't know whether the splits are due to substantial differences in item difficulty parameters, because the item difficulty profiles in the end nodes are hard to interpret/compare. 

<<fig = TRUE, height = 8, width = 15>>=
plot(Raschtree_culture)
@

Mantel-Haenszel trees use the Mantel-Haenszel effect size measure for DIF. it has three categories (A: negligible, B: moderate, C: large). If none of the items has DIF in category B or C (default, but can also be changed so that DIF has to be C), the tree is stopped from growing. 

The software must be installed from github, but will (probably) be implemented in the psychotree package some time in the future

<<>>=
devtools::install_github("mirka-henninger/raschtreeMH")
library(raschtreeMH)
@

Syntax is very similar to the classical Rasch tree, but an additional argument \texttt{stopfun}, where the mantelhaneszel stopping function can be selected (but also own stopping functions can be provided; see Henninger et al., 2023). The user also has to indicate what kind of purification strategy should be used (none, 2step, iterative). Iterative is recommended. 

<<echo = FALSE>>=
if(!file.exists("SPISA_example/Raschtree.rda")){
  library(psychotree)
  Raschtree_MH_culture <- raschtree(culture ~  Gender + Age + Area, 
                                    data = dat_SPISA, 
                                    stopfun= stopfun_mantelhaenszel(purification = "iterative"))
  Raschtree_MH_culture <- add_mantelhaenszel(Raschtree_MH_culture, purification = "iterative")
  save(Raschtree_MH_culture, file = "SPISA_example/Raschtree_MH_culture.rda")
}
load("SPISA_example/Raschtree_MH_culture.rda")
@

<<eval = FALSE>>=
Raschtree_MH_culture <- raschtree(culture ~  Gender + Age + Area, 
                                  data = dat_SPISA, 
                                  stopfun= stopfun_mantelhaenszel(
                                    purification = "iterative"))
@

For technical reasons, the information about the effect size and ETS classification are not saved in the tree object itself but have to be added afterwards using the \texttt{add\_mantelhaenszel} function. The information can then be accessed from the object using \texttt{\$info\$mantelhaenszel}

<<eval = FALSE>>=
Raschtree_MH_culture <- add_mantelhaenszel(Raschtree_MH_culture, 
                                           purification = "iterative")
Raschtree_MH_culture$info$mantelhaenszel
@

\todo[inline]{not clear what this information is necessary/useful for? since it is not displayed, leave this out?}

If we now plot the Mantel-Haenszel Rasch tree, we see that the tree is much more concise with a lower number of splits. In addition, we see the number of items classified as A, B, or C in each node. For instance, we see that one item is classified as B in Node 1, and no item as C.

<<fig = TRUE, width = 12, height = 7>>=
plot(Raschtree_MH_culture)
@

We can also color the items in the end node profiles according to a split in the tree. Here, we see that for Node 1 (split on the covariate Area), item 2 shows DIF in category B. Item 2 seems to be easier (y-axis shows item easiness) in certain areas compared to Language, Culture, Medicine, Health, Arts. 

<<fig = TRUE, width = 12, height = 7>>=
plot(Raschtree_MH_culture, color_by_node = 1)
@

We can also color by Node 3 (also split on covariate Area). Also here, Item 2 shows DIF. Similarly, item 2 seems to be more difficult (less easy) for respondents who study Arts. 

<<fig = TRUE, width = 12, height = 7>>=
plot(Raschtree_MH_culture, color_by_node = 3)
@

This is interesting, because it is the culture scale. Why should people who study Arts have more problems to solve the item? When we look at the item, it probably makes sense: the items asks what four buildings have in common (Allianz-Arena München, Tate Modern NY, Olympia-Stadion Peking, Elbphilharmonie Hamburg). Two of these buildings are sports stadiums. So probably respondents who are interested in sports, and know these buildings well have an advantage on the item (independent of the level of knowledge about culture). 

\todo[inline]{Maybe a small note on anchoring? Item difficulty profiles are anchoring on the items that do not show DIF. This facilitates comparisons across end nodes (but maybe we do not want to say that??)}
